---
// 1. Import Content Collection utility
import { getCollection } from 'astro:content';

// 2. Import the Layout for BlogPosts
import BlogPostLayout from '../../../layouts/BlogPostLayout.astro';

// 3. Generate Static Pages for Each blog post in the Content Collection
// This is Dynamic Routing. This Function is returning an Array of Objects. Each object in the array
// tells Astro what paths should be pre-rendered at build time.
// The paths would be `blogs/web-development/[blog_post_slug]`
// The `blog_post_slug` is a parameter that will be replaced by
// the slug of the our blog post entry.
// By default the slug is the name of the mdx file
//
//
// Astro is creating a page Route
// for each Blog Post Entry in my Web Development Collection.
// Because this is SSG. Dynamic routes are created on build time.
export async function getStaticPaths() {
  // Get the all the Entries in the Web Development Collection
  const webDevBlogPosts = await getCollection('web-development');

  // For Each entry Create a page route.
  // Specify the properties you want to pass to that page route
  // notice that the key(blog_post_slug) is the same as the filename.
  return webDevBlogPosts.map((entry) => ({
    params: { blog_post_slug: entry.slug },
    props: { entry: entry },
  }));
}

// 3. Get your Properties
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<!-- This is a page Template for all entries 
    within the Ideas Content Collection -->
<BlogPostLayout frontmatter={entry.data}>
  <Content />
</BlogPostLayout>
